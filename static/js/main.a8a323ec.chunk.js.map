{"version":3,"sources":["components/Rating/UncontrolledRating.tsx","components/Accordion/UncontrolledAccordion.tsx","components/OnOff/OnOff.tsx","components/Rating/Rating.tsx","components/Accordion/Accordion.tsx","components/OnOff/UncontrolledOnOff.tsx","components/Select/Select.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UncontrolledRating","useState","value","setValue","SetRatingHandler","Star","selected","props","onClick","UncontrolledAccordion","collapsed","setCollapsed","AccordionTitle","ClickHandler","titleValue","title","AccordionBody","OnOff","onStyle","width","height","border","display","padding","backgroundColor","on","offStyle","marginLeft","indicatorStyle","borderRadius","style","onChange","Rating","Accordion","setAccordionCollapsed","items","map","i","index","UncontrolledOnOff","setOn","console","log","Select","restProps","App","ratingValue","setRatingValue","accordionCollapsed","switchOn","setSwitchOn","className","AppTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8a323ec.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\ntype RatingValuesType = {}\r\n\r\nexport function UncontrolledRating() {\r\n\r\n    let [value, setValue] = useState<number>(0);\r\n\r\n\r\n    const SetRatingHandler = (value:number) => {\r\n        setValue(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Star selected={value > 0} SetRatingHandler={()=>SetRatingHandler(1)} />\r\n            <Star selected={value > 1} SetRatingHandler={()=>SetRatingHandler(2)} />\r\n            <Star selected={value > 2} SetRatingHandler={()=>SetRatingHandler(3)} />\r\n            <Star selected={value > 3} SetRatingHandler={()=>SetRatingHandler(4)} />\r\n            <Star selected={value > 4} SetRatingHandler={()=>SetRatingHandler(5)} />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\ntype StarPropsType = {\r\n    selected: boolean\r\n\r\n    SetRatingHandler: () => void\r\n}\r\n\r\nexport function Star(props: StarPropsType) {\r\n    return <span onClick={()=>props.SetRatingHandler()}>{props.selected ? <b> star</b> : ' star'}</span>;\r\n}\r\n","import React, {useState} from 'react';\r\n\r\ntype AccordionPropsType = {\r\n    title: string,\r\n    //collapsed: boolean\r\n}\r\n\r\nexport function UncontrolledAccordion(props: AccordionPropsType) {\r\n\r\n    let [collapsed, setCollapsed] = useState(false);\r\n    const ClickHandler = () => {\r\n        if (!collapsed) {\r\n            setCollapsed(true);\r\n        } else {\r\n            setCollapsed(false);\r\n        }\r\n\r\n    };\r\n    return (\r\n        <div>\r\n            <AccordionTitle ClickHandler={ClickHandler} titleValue={props.title}/>\r\n\r\n            {collapsed && <AccordionBody/>}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype AccordionTitleProps = {\r\n    titleValue: string\r\n    ClickHandler: () => void\r\n}\r\n\r\nexport function AccordionTitle(props: AccordionTitleProps) {\r\n    return <h3 onClick={props.ClickHandler}>--{props.titleValue}--</h3>;\r\n}\r\n\r\ntype AccordionBodyProps = {\r\n    //isCollapsed: boolean\r\n}\r\n\r\nexport function AccordionBody(props: AccordionBodyProps) {\r\n\r\n    return (\r\n        <ul>\r\n            <li>1</li>\r\n            <li>2</li>\r\n            <li>3</li>\r\n        </ul>\r\n\r\n    );\r\n\r\n\r\n}","import React, {useState} from 'react';\r\n\r\nexport type PropsType = {\r\n    on: boolean\r\n    onChange: (on: boolean) => void\r\n}\r\n\r\n\r\nexport function OnOff(props: PropsType) {\r\n\r\n\r\n    const onStyle = {\r\n        width: '30px',\r\n        height: '20px',\r\n        border: '1px solid black',\r\n        display: 'inline-block',\r\n        padding: '2px',\r\n        backgroundColor: props.on ? 'green' : 'white'\r\n    };\r\n    const offStyle = {\r\n        width: '30px',\r\n        height: '20px',\r\n        border: '1px solid black',\r\n        display: 'inline-block',\r\n        marginLeft: '5px',\r\n        padding: '2px',\r\n        backgroundColor: props.on ? 'white' : 'red'\r\n    };\r\n    const indicatorStyle = {\r\n        width: '10px',\r\n        height: '10px',\r\n        borderRadius: '15px',\r\n        border: '1px solid black',\r\n        display: 'inline-block',\r\n        marginLeft: '5px',\r\n        backgroundColor: props.on ? 'green' : 'red'\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={onStyle} onClick={() => {\r\n                props.onChange(true);\r\n            }}>On\r\n            </div>\r\n            <div style={offStyle} onClick={() => {\r\n                props.onChange(false);\r\n            }}>Off\r\n            </div>\r\n            <div style={indicatorStyle}></div>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\n\r\nexport type ControlledRatingType = 0 | 1 | 2 | 3 | 4 | 5\r\n\r\nexport type ControlledRatingValueType = {\r\n    value: ControlledRatingType\r\n    onClick: (value: ControlledRatingType) => void\r\n}\r\n\r\nexport function Rating(props: ControlledRatingValueType) {\r\n\r\n    const SetRatingHandler = (starValue: 1 | 2 | 3 | 4 | 5) => {\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Star selected={props.value > 0} onClick={props.onClick} value={1}/>\r\n            <Star selected={props.value > 1} onClick={props.onClick} value={2}/>\r\n            <Star selected={props.value > 2} onClick={props.onClick} value={3}/>\r\n            <Star selected={props.value > 3} onClick={props.onClick} value={4}/>\r\n            <Star selected={props.value > 4} onClick={props.onClick} value={5}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\ntype StarPropsType = {\r\n    selected: boolean\r\n    onClick: (value: ControlledRatingType) => void\r\n    value:ControlledRatingType\r\n}\r\n\r\nexport function Star(props: StarPropsType) {\r\n    return <span onClick={()=>props.onClick(props.value)}>{props.selected ? <b> star</b> : ' star'}</span>;\r\n}\r\n","import React from 'react';\r\n\r\ntype ItemType = {\r\n    title: string\r\n    value: any\r\n}\r\n\r\ntype AccordionPropsType = {\r\n    title: string,\r\n    collapsed: boolean\r\n    setAccordionCollapsed: () => void\r\n    items?: ItemType[]\r\n    onClick?: (i: any) => void\r\n}\r\n\r\nexport function Accordion(props: AccordionPropsType) {\r\n\r\n    return (\r\n        <div>\r\n            <AccordionTitle ClickHandler={props.setAccordionCollapsed} titleValue={props.title}/>\r\n            {props.collapsed && <AccordionBody onClick={props.onClick} items={props.items}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype AccordionTitleProps = {\r\n    titleValue: string\r\n    ClickHandler: () => void\r\n}\r\n\r\nexport function AccordionTitle(props: AccordionTitleProps) {\r\n    return <h3 onClick={() => props.ClickHandler()}>--{props.titleValue}--</h3>;\r\n}\r\n\r\ntype AccordionBodyProps = {\r\n    items?: ItemType[]\r\n    onClick?: (i: any) => void\r\n}\r\n\r\nexport function AccordionBody(props: AccordionBodyProps) {\r\n\r\n    return (\r\n        <ul>\r\n            {\r\n                props.items?.map((i, index) => {\r\n                    return <li onClick={() => {\r\n                        props.onClick&&props.onClick(i.value);\r\n                    }} key={index}>{i.title}</li>;\r\n                })\r\n            }\r\n        </ul>\r\n\r\n    );\r\n\r\n\r\n}","import React, {useState} from 'react';\r\n\r\n\r\n\r\n\r\nexport function UncontrolledOnOff() {\r\n\r\n    let [on, setOn] = useState(false);\r\n\r\n    console.log('on'+on);\r\n\r\n    const onStyle = {\r\n        width: '30px',\r\n        height: '20px',\r\n        border: '1px solid black',\r\n        display: 'inline-block',\r\n        padding: '2px',\r\n        backgroundColor: on ? 'green' : 'white'\r\n    };\r\n    const offStyle = {\r\n        width: '30px',\r\n        height: '20px',\r\n        border: '1px solid black',\r\n        display: 'inline-block',\r\n        marginLeft: '5px',\r\n        padding: '2px',\r\n        backgroundColor: on ? 'white' : 'red'\r\n    };\r\n    const indicatorStyle = {\r\n        width: '10px',\r\n        height: '10px',\r\n        borderRadius: '15px',\r\n        border: '1px solid black',\r\n        display: 'inline-block',\r\n        marginLeft: '5px',\r\n        backgroundColor: on ? 'green' : 'red'\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={onStyle} onClick={() => {\r\n                setOn(true);\r\n            }}>On\r\n            </div>\r\n            <div style={offStyle} onClick={()=>{setOn(false);}}>Off\r\n            </div>\r\n            <div style={indicatorStyle}></div>\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes, useState} from 'react';\r\n\r\ntype DefaultSelectType= DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>;\r\ntype SelectType = {\r\n    value?: string\r\n}&DefaultSelectType\r\n\r\nexport const Select:React.FC<SelectType> = ({...restProps}) => {\r\n\r\n    return (\r\n        <>\r\n            <select {...restProps} >\r\n                <option value={'1'}>none</option>\r\n                <option value={'2'}>Moscow</option>\r\n                <option value={'3'}>Kiev</option>\r\n                <option value={'4'}>Minsk</option>\r\n            </select>\r\n        </>\r\n    );\r\n};\r\n\r\n","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {UncontrolledRating} from './components/Rating/UncontrolledRating';\r\nimport {UncontrolledAccordion} from './components/Accordion/UncontrolledAccordion';\r\nimport {OnOff} from './components/OnOff/OnOff';\r\nimport {Rating, ControlledRatingType} from './components/Rating/Rating';\r\nimport {Accordion} from './components/Accordion/Accordion';\r\nimport {UncontrolledOnOff} from './components/OnOff/UncontrolledOnOff';\r\nimport {Select} from './components/Select/Select';\r\n\r\nfunction App() {\r\n\r\n    let [ratingValue, setRatingValue] = useState<ControlledRatingType>(0);\r\n    let [accordionCollapsed, setAccordionCollapsed] = useState<boolean>(false);\r\n    let [switchOn, setSwitchOn] = useState<boolean>(false);\r\n    let items = [{title:'Ilya',value:1},{title:'Dimych',value:2},{title:'Viktor',value:3}];\r\n    return (\r\n        <div className=\"app\">\r\n            <AppTitle/>\r\n            <UncontrolledRating/>\r\n            {/*<UncontrolledRating />\r\n            <UncontrolledRating />\r\n            <UncontrolledRating />\r\n            <UncontrolledRating />*/}\r\n            <Rating value={ratingValue} onClick={setRatingValue}/>\r\n            <OnOff on={switchOn} onChange={setSwitchOn}/>\r\n            <UncontrolledOnOff/>\r\n\r\n            <UncontrolledAccordion title={'Users'}/>\r\n            <Accordion items={items}\r\n                       title={'Menu'}\r\n                       collapsed={accordionCollapsed}\r\n                       setAccordionCollapsed={() => setAccordionCollapsed(!accordionCollapsed)}/>\r\n            {/*<UncontrolledAccordion title={'Menu'}/>*/}\r\n            <Select/>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\nexport function AppTitle() {\r\n    return <>This is App Component</>;\r\n}\r\n\r\n\r\n\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}